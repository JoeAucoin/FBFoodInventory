IF COL_LENGTH('GIBS_FBProducts','LimitQuantities') IS NULL
 BEGIN
  /*  COLUMN DOES NOT EXIST  */
 Alter TABLE [dbo].[GIBS_FBProducts]
ADD LimitQuantities nvarchar(50)
 END
GO



/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_GetByID]    Script Date: 5/30/2024 1:58:11 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBProducts_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBProducts_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_GetByID]    Script Date: 5/30/2024 1:58:11 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_FBProducts_GetByID]

	@ModuleId int,
	@ProductID int

as

BEGIN

	SELECT     ProductID, ProductName, CasePrice, 
	CaseCount, GIBS_FBProducts.ProductCategoryID, GIBS_FBProductCategory.ProductCategory,
	 GIBS_FBProducts.ModuleID, CaseWeight, 
	GIBS_FBProducts.CreatedOnDate, GIBS_FBProducts.CreatedByUserID, 
	GIBS_FBProducts.LastModifiedByUserID, GIBS_FBProducts.LastModifiedOnDate, GIBS_FBProducts.PortalID,
	'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName,
	GIBS_FBProducts.isActive, Limit, LimitQuantities
	from GIBS_FBProducts 
	INNER JOIN
	GIBS_FBProductCategory ON GIBS_FBProducts.ProductCategoryID = GIBS_FBProductCategory.ProductCategoryID

	left outer join Users on GIBS_FBProducts.CreatedByUserID = Users.UserId
	where  GIBS_FBProducts.ModuleId = @ModuleId and GIBS_FBProducts.ProductID = @ProductID

END
GO



/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_Insert]    Script Date: 5/30/2024 1:58:59 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBProducts_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBProducts_Insert]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_Insert]    Script Date: 5/30/2024 1:58:59 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GIBS_FBProducts_Insert] 
	
	@ProductName NVARCHAR(100), 
	@CasePrice money,
	@CaseCount INT,
	@ProductCategoryID INT,
	@CreatedByUserID INT, 
	@ModuleId INT, 
	@PortalID INT,
	@CaseWeight float,
	@IsActive bit,
	@Limit int,
	@LimitQuantities NVARCHAR(50)
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into dbo.GIBS_FBProducts (
	ProductName,
	CasePrice,
	CaseCount,
	ProductCategoryID,
	ModuleID,
	CreatedOnDate,
	CreatedByUserID,
	PortalID,
	CaseWeight,
	IsActive,
	Limit,
	LimitQuantities
) 
values (
	@ProductName,
	@CasePrice,
	@CaseCount,
	@ProductCategoryID,
	@ModuleId,
	GETDATE(),
	@CreatedByUserID,
	@PortalID,
	@CaseWeight,
	@IsActive,
	@Limit,
	@LimitQuantities
)

select SCOPE_IDENTITY()
	
END
GO



/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_List]    Script Date: 5/30/2024 2:00:28 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBProducts_List]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBProducts_List]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_List]    Script Date: 5/30/2024 2:00:28 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_FBProducts_List]

	@ModuleId int

as
BEGIN 

	SELECT     GIBS_FBProducts.ProductID, GIBS_FBProducts.ProductName, 
	GIBS_FBProducts.CasePrice, GIBS_FBProducts.CaseCount, GIBS_FBProducts.CaseWeight,
	GIBS_FBProducts.ProductCategoryID, GIBS_FBProductCategory.ProductCategory,GIBS_FBProducts.ProductCategoryID,
	GIBS_FBProducts.ModuleID, GIBS_FBProducts.CreatedOnDate, 
	GIBS_FBProducts.CreatedByUserID, GIBS_FBProducts.LastModifiedByUserID, 
	GIBS_FBProducts.LastModifiedOnDate, GIBS_FBProducts.PortalID, 
	Users.FirstName + ' ' + Users.LastName AS 'CreatedByUserName',
	LastMod.FirstName + ' ' + LastMod.LastName AS 'LastModifiedByUserName',
	GIBS_FBProducts.IsActive,
	GIBS_FBProductCategory.ProductCategory + ' - ' + GIBS_FBProducts.ProductName AS ProductNameDropdown,
	GIBS_FBProducts.Limit,
	GIBS_FBProducts.LimitQuantities
                      
FROM         GIBS_FBProducts 
			INNER JOIN
            GIBS_FBProductCategory ON GIBS_FBProducts.ProductCategoryID = GIBS_FBProductCategory.ProductCategoryID
              
              LEFT OUTER JOIN
             Users AS LastMod ON GIBS_FBProducts.LastModifiedByUserID = LastMod.UserID
                      
              LEFT OUTER JOIN
             Users AS Users ON GIBS_FBProducts.CreatedByUserID = Users.UserID
WHERE     (GIBS_FBProducts.ModuleID = @ModuleId)
ORDER BY GIBS_FBProductCategory.ProductCategory, GIBS_FBProducts.ProductName

END
GO




/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_Update]    Script Date: 5/30/2024 2:01:45 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBProducts_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBProducts_Update]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_Update]    Script Date: 5/30/2024 2:01:45 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GIBS_FBProducts_Update] 
	@ProductID INT,
	@ProductName NVARCHAR(100), 
	@CasePrice money,
	@CaseCount INT,
	@ProductCategoryID INT,
	@ModuleId INT, 
	@LastModifiedByUserID INT,
	@PortalID INT,
	@CaseWeight float,
	@IsActive bit,
	@Limit int,
	@LimitQuantities  NVARCHAR(50)
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	
	UPDATE dbo.GIBS_FBProducts
		SET 
		ProductName = @ProductName,
		CasePrice = @CasePrice,
		CaseCount = @CaseCount,
		ProductCategoryID = @ProductCategoryID,
		LastModifiedByUserID = @LastModifiedByUserID,
		LastModifiedOnDate = GETDATE(),
		PortalID = @PortalID,
		CaseWeight = @CaseWeight,
		IsActive = @IsActive,
		Limit = @Limit,
		LimitQuantities = @LimitQuantities
		
		WHERE  ModuleId = @ModuleId
		and ProductID = @ProductID;
	
END
GO
